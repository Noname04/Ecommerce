// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  phonenumber String?
  username    String   @unique
  password    String
  orders      Orders[]
}

model Category {
  id          Int     @id @default(autoincrement())
  name        String
  description String? @db.Text
  items       Item[]
}

model Item {
  id          Int         @id @default(autoincrement())
  name        String
  photo       String[]      @db.Text
  price       Float
  amount      Int
  sold        Int
  description String      @db.Text
  category    Category    @relation(fields: [categoryId], references: [id])
  categoryId  Int
  OrderItem   OrderItem[]
}

model OrderItem {
  id           Int            @id @default(autoincrement())
  item         Item           @relation(fields: [itemId], references: [id])
  itemId       Int
  amount       Int
  ItemOnOrders ItemOnOrders[]
}

model ItemOnOrders {
  item    OrderItem @relation(fields: [itemId], references: [id])
  itemId  Int
  order   Orders    @relation(fields: [orderId], references: [id])
  orderId Int

  @@id([itemId, orderId])
}

model Orders {
  id        Int            @id @default(autoincrement())
  firstName String
  lastName  String
  adres     String
  zipCode   String
  city      String
  status    String         @default("pending")
  items     ItemOnOrders[]
  user      User           @relation(fields: [userId], references: [id])
  userId    Int
}